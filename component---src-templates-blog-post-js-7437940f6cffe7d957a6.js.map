{"version":3,"file":"component---src-templates-blog-post-js-7437940f6cffe7d957a6.js","mappings":"oKAiEA,IApDY,WACV,IAAMA,GAAOC,EAAAA,EAAAA,gBAAe,cAoB5B,EAA2BD,EAAKE,KAAKC,aAA7BC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,OAChB,OACE,uBACEC,MAAO,CACLC,QAAQ,OACRC,cAAcC,EAAAA,EAAAA,IAAO,OAGvB,gBAAC,EAAAC,EAAD,CACEC,MAAOX,EAAKY,OAAOC,gBAAgBC,gBACnCC,IAAKX,EAAOY,KACZV,MAAO,CACLW,aAAaR,EAAAA,EAAAA,IAAO,IACpBD,aAAc,EACdU,SAAU,GACVC,aAAa,QAEfC,SAAU,CACRD,aAAa,SAEjB,uCACa,8BAASf,EAAOY,MAD7B,IAC6CZ,EAAOiB,QADpD,IAGE,qBAAGC,KAAI,uBAAyBjB,EAAOkB,QAAWC,OAAO,WAAzD,0C,2FCuBR,UAxEyB,SAAC,GAAqC,IAAnCxB,EAAkC,EAAlCA,KAAMyB,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SACvCC,EAAO3B,EAAK4B,eACZC,EAAY7B,EAAKE,KAAKC,aAAa2B,MACjCC,EAAmBN,EAAnBM,SAAUC,EAASP,EAATO,KAElB,OACE,gBAAC,IAAD,CAAQN,SAAUA,EAAUI,MAAOD,GACjC,gBAAC,IAAD,CACEC,MAAOH,EAAKM,YAAYH,MACxBI,YAAaP,EAAKM,YAAYC,aAAeP,EAAKQ,UAEpD,+BACE,8BACE,sBACE7B,MAAO,CACL8B,WAAW3B,EAAAA,EAAAA,IAAO,GAClBD,aAAc,IAGfmB,EAAKM,YAAYH,OAEpB,qBACExB,MAAK,kBACA+B,EAAAA,EAAAA,KAAM,IADN,CAEH9B,QAAQ,QACRC,cAAcC,EAAAA,EAAAA,IAAO,MAGtBkB,EAAKM,YAAYK,KAPpB,MAO6BX,EAAKY,WAPlC,cAUF,2BAASC,wBAAyB,CAAEC,OAAQd,EAAKe,QACjD,sBACEpC,MAAO,CACLE,cAAcC,EAAAA,EAAAA,IAAO,MAGzB,8BACE,gBAAC,IAAD,QAIJ,2BACE,sBACEH,MAAO,CACLC,QAAQ,OACRoC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,0BACGf,GACC,gBAAC,EAAAgB,KAAD,CAAMC,GAAIjB,EAASkB,OAAOC,KAAMC,IAAI,QAApC,KACKpB,EAASE,YAAYH,QAI9B,0BACGE,GACC,gBAAC,EAAAe,KAAD,CAAMC,GAAIhB,EAAKiB,OAAOC,KAAMC,IAAI,QAC7BnB,EAAKC,YAAYH,MADpB","sources":["webpack://one-percent-blog/./src/components/bio.js","webpack://one-percent-blog/./src/templates/blog-post.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\nimport { rhythm } from \"../utils/typography\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`query BioQuery {\n  avatar: file(absolutePath: {regex: \"/profile-pic.png/\"}) {\n    childImageSharp {\n      gatsbyImageData(width: 50, height: 50, layout: FIXED)\n    }\n  }\n  site {\n    siteMetadata {\n      author {\n        name\n        summary\n      }\n      social {\n        twitter\n      }\n    }\n  }\n}\n`)\n\n  const { author, social } = data.site.siteMetadata\n  return (\n    <div\n      style={{\n        display: `flex`,\n        marginBottom: rhythm(2.5),\n      }}\n    >\n      <GatsbyImage\n        image={data.avatar.childImageSharp.gatsbyImageData}\n        alt={author.name}\n        style={{\n          marginRight: rhythm(1 / 2),\n          marginBottom: 0,\n          minWidth: 50,\n          borderRadius: `100%`,\n        }}\n        imgStyle={{\n          borderRadius: `50%`,\n        }} />\n      <p>\n        Written by <strong>{author.name}</strong> {author.summary}\n        {` `}\n        <a href={`https://twitter.com/${social.twitter}`} target=\"__blank\">\n          You should follow me on Twitter !!\n        </a>\n      </p>\n    </div>\n  );\n}\n\nexport default Bio\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEOHeader from \"../components/seo\"\nimport { rhythm, scale } from \"../utils/typography\"\n\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata.title\n  const { previous, next } = pageContext\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEOHeader\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article>\n        <header>\n          <h1\n            style={{\n              marginTop: rhythm(1),\n              marginBottom: 0,\n            }}\n          >\n            {post.frontmatter.title}\n          </h1>\n          <p\n            style={{\n              ...scale(-1 / 5),\n              display: `block`,\n              marginBottom: rhythm(1),\n            }}\n          >\n            {post.frontmatter.date} • {post.timeToRead} min read\n          </p>\n        </header>\n        <section dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n\n      <nav>\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      timeToRead\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n  }\n`\n"],"names":["data","useStaticQuery","site","siteMetadata","author","social","style","display","marginBottom","rhythm","G","image","avatar","childImageSharp","gatsbyImageData","alt","name","marginRight","minWidth","borderRadius","imgStyle","summary","href","twitter","target","pageContext","location","post","markdownRemark","siteTitle","title","previous","next","frontmatter","description","excerpt","marginTop","scale","date","timeToRead","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel"],"sourceRoot":""}